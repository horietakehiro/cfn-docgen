AWSTemplateFormatVersion: 2010-09-09
Description: AWS resources for CI/CD piepeline

Parameters:
  AppName:
    Description: App name
    Type: String
    Default: cfn-docgen
  SamplingParamName:
    Description: Paramter name of sampling number of unittest
    Type: String
    Default: /cfn-docgen/sampling
  ArtifactRepositoryName:
    Description: Repository name of CodeArtifact
    Type: String
    Default: pypi
  ApiTokenParamName:
    Description: Paramter name of api token for uploading a package to pypi  
    Type: String
  SourceURL:
    Description: Source URL of github repository
    Type: String
    Default: https://github.com/horietakehiro/cfn-docgen.git
  BucketName:
    Description: S3 bucket name for uploading artifacts 
    Type: String
  SnsTopicArn:
    Description: Arn of sns topic  
    Type: String
  GitHubConnectionArn:
    Description: codestar connection arn for github
    Type: String
  DockerHubPasswordParamName:
    Description: Paramter name of password for pushing image to DockerHub  
    Type: String


Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub cfn-docgen-artifact-${AWS::AccountId}-${AWS::Region}
  PublishBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref ArtifactBucket
                - /*
            Principal:
              Service: serverlessrepo.amazonaws.com
            Condition:
              StringEquals:
                "aws:SourceAccount":
                  - !Ref AWS::AccountId
  CodePiplineRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Service Role for Codepipeline
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        # - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        # - arn:aws:iam::aws:policy/AmazonS3FullAccess
        # - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  BuildProject1:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        # Type: S3
        # Location: !Ref BucketName
        # Name: WarningLogs.log
        # NamespaceType: BUILD_ID
        # Path: BuildArtifacts
        # Packaging: NONE
      Description: Run tests and upload artifacts to pypi
      # BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: SAMPLING
            Type: PARAMETER_STORE
            Value: !Ref SamplingParamName
          - Name: API_TOKEN
            Type: PARAMETER_STORE
            Value: !Ref ApiTokenParamName

          - Name: REPOSITORY_NAME
            Type: PLAINTEXT
            Value: !Ref ArtifactRepositoryName
          - Name: PACKAGE_NAME
            Type: PLAINTEXT
            Value: !Ref AppName
          - Name: CFN_DOCGEN_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region

        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER 
      Name: !Sub ${AppName}-buildproject-1
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ./buildspec.yaml
        # ReportBuildStatus: true
        # Type: GITHUB
        # Location: !Ref SourceURL
        # Auth:
        #   Type: OAUTH
      # Triggers:
      #   BuildType: BUILD
      #   Webhook: true
      #   FilterGroups:
      #     - - Type: EVENT
      #         Pattern: PUSH
      #       - Type: HEAD_REF
      #         Pattern: ^refs/heads/release
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE

  BuildProject2:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Publish serverless application
      # BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactBucket

        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER 
      Name: !Sub ${AppName}-buildproject-2
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ./buildspec_serverless.yaml
        # ReportBuildStatus: true
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE

  BuildProject2:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Publish serverless application
      # BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactBucket

        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER 
      Name: !Sub ${AppName}-buildproject-2
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ./buildspec_serverless.yaml
        # ReportBuildStatus: true
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE

  BuildProject3:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Publish docker image
      # BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: DOCKERHUB_PASSWORD
            Type: PARAMETER_STORE
            Value: !Ref DockerHubPasswordParamName

        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER 
      Name: !Sub ${AppName}-buildproject-3
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ./buildspec_docker.yaml
        # ReportBuildStatus: true
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Type: S3
        Location: !Ref ArtifactBucket
      Name: !Sub ${AppName}-pipeline
      # RestartExecutionOnUpdate: true
      RoleArn:
        Fn::GetAtt: [CodePiplineRole, Arn]
      Stages: 
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                BranchName: release
                OutputArtifactFormat: CODE_ZIP
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: horietakehiro/cfn-docgen
              Name: Source
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: SourceArtifact
              Region:
                Ref: AWS::Region
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: BuildProject1
              Name: Build
              Namespace: BuildVariables
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
              Region:
                Ref: AWS::Region
              RunOrder: 1

        - Name: Publish
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: BuildProject2
              Name: PublishServerless
              Namespace: PublishVariablesServerless
              OutputArtifacts:
                - Name: PublishArtifactServerless
              InputArtifacts:
                - Name: SourceArtifact
              Region:
                Ref: AWS::Region
              RunOrder: 1

            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: BuildProject3
              Name: PublishDocker
              Namespace: PublishVariablesDocker
              OutputArtifacts:
                - Name: PublishArtifactDocker
              InputArtifacts:
                - Name: SourceArtifact
              Region:
                Ref: AWS::Region
              RunOrder: 1
