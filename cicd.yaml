AWSTemplateFormatVersion: 2010-09-09
Description: AWS resources for CI/CD piepeline

Parameters:
  AppName:
    Description: App name
    Type: String
    Default: cfn-docgen
  # ArtifactBucket:
  #   Description: Bucket name for codepipeline artifact 
  #   Type: String
  # RepositoryName:
  #   Description: Name of source repository
  #   Type: String 
  #   Default: cfn-docgen
  SamplingParamName:
    Description: Paramter name of sampling number of unittest
    Type: String
    Default: /cfn-docgen/sampling
  # DomainName:
  #   Description: Domain name of CodeArtifact
  #   Type: String
  ArtifactRepositoryName:
    Description: Repository name of CodeArtifact
    Type: String
    Default: pypi
  ApiTokenParamName:
    Description: Paramter name of api token for uploading a package to pypi  
    Type: String
  SourceURL:
    Description: Source URL of github repository
    Type: String
    Default: https://github.com/horietakehiro/cfn-docgen.git

Resources:

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        # - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        # - arn:aws:iam::aws:policy/AWSCodeArtifactAdminAccess
      Policies:
        - PolicyName: get-parameter-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ssm:GetParameters
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: Run tests and upload artifacts to pypi
      BadgeEnabled: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: SAMPLING
            Type: PARAMETER_STORE
            Value: !Ref SamplingParamName
          - Name: API_TOKEN
            Type: PARAMETER_STORE
            Value: !Ref ApiTokenParamName

          - Name: REPOSITORY_NAME
            Type: PLAINTEXT
            Value: !Ref ArtifactRepositoryName
          - Name: PACKAGE_NAME
            Type: PLAINTEXT
            Value: !Ref AppName
          - Name: CFN_DOCGEN_REGION
            Type: PLAINTEXT
            Value: AWS::Region

        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER 
      Name: !Sub ${AppName}-buildproject
      ServiceRole: !Ref BuildRole
      Source:
        ReportBuildStatus: true
        BuildSpec: ./buildspec.yaml
        Type: GITHUB
        Location: !Ref SourceURL
        Auth:
          Type: OAUTH
      Triggers:
        BuildType: BUILD
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/master
  
  # PipelineRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     Path: /
  #     ManagedPolicyArns:
  #       - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
  #       - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
  #       - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
  #       - arn:aws:iam::aws:policy/AmazonS3FullAccess
      
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - codepipeline.amazonaws.com
  #           Action:
  #             - 'sts:AssumeRole'

  # Pipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties: 
  #     ArtifactStore: 
  #       Location: !Ref ArtifactBucket
  #       Type: S3
  #     Name: !Sub ${AppName}-pipeline
  #     RestartExecutionOnUpdate: false
  #     RoleArn: !GetAtt PipelineRole.Arn
  #     Stages: 
  #       - Name: Source
  #         Actions:
  #           - ActionTypeId:
  #               Category: Source
  #               Owner: AWS
  #               Provider: CodeCommit
  #               Version: 1
  #             Configuration:
  #               BranchName: master
  #               OutputArtifactFormat: CODEBUILD_CLONE_REF
  #               PollForSourceChanges: false
  #               RepositoryName: !Ref RepositoryName
  #             Name: Source
  #             Namespace: SourceVariable
  #             OutputArtifacts:
  #               - Name: SourceArtifact
  #             Region: !Ref AWS::Region
  #             RunOrder: 1
  #       - Name: Build
  #         Actions:
  #           - ActionTypeId:
  #               Category: Build
  #               Owner: AWS
  #               Provider: CodeBuild
  #               Version: 1
  #             Configuration:
  #               ProjectName: !Ref BuildProject
  #               # TBD
  #             Name: Build
  #             Namespace: BuildVariables
  #             OutputArtifacts:
  #               - Name: BuildArtifact
  #             InputArtifacts:
  #               - Name: SourceArtifact
  #             Region: !Ref AWS::Region
  #             RunOrder: 1


  # EventRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     Path: /
  #     ManagedPolicyArns:
  #       - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - events.amazonaws.com
  #           Action:
  #             - 'sts:AssumeRole'

  # PushEvent:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Description: When push event happen to codecommit repository, start pipeline
  #     EventPattern:
  #       Fn::Sub: |
  #         {
  #           "source": ["aws.codecommit"],
  #           "detail-type": ["CodeCommit Repository State Change"],
  #           "resources": ["arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}"],
  #           "detail": {
  #             "event": ["referenceCreated", "referenceUpdated"],
  #             "referenceType": ["branch"],
  #             "referenceName": ["master"]
  #           }
  #         }
  #     State: ENABLED
  #     Targets:
  #     - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
  #       RoleArn: !GetAtt EventRole.Arn
  #       Id: StartPipeline



# Outputs: