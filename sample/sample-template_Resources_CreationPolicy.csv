ResourceId,ResourceType,ResourceNote,Property,Value,Description,Required,Type,Default,Filename
NATDevice,AWS::EC2::Instance,This is a ec2 instance,AutoScalingCreationPolicy,,"For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed.",,,,sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,AutoScalingCreationPolicy.MinSuccessfulInstancesPercent,80,"Specifies the percentage of instances in an Auto Scaling replacement update that must signal success for the update to succeed. You can specify a value from 0 to 100. CloudFormation rounds to the nearest tenth of a percent. For example, if you update five instances with a minimum successful percentage of 50, three instances must signal success. If an instance doesn't send a signal within the time specified by the Timeout property, CloudFormation assumes that the instance wasn't created.",No,Integer,100,sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,ResourceSignal,,"When CloudFormation creates the associated resource, configures the number of required success signals and the length of time that CloudFormation waits for those signals.",,,,sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,ResourceSignal.Count,10,"The number of success signals CloudFormation must receive before it sets the resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't receive the specified number of signals before the timeout period expires, the resource creation fails and CloudFormation rolls the stack back.",No,Integer,1,sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,ResourceSignal.Timeout,PT5M,"The length of time that CloudFormation waits for the number of signals that was specified in the Count property. The timeout period starts after CloudFormation starts creating the resource, and the timeout expires no sooner than the time you specify but can occur shortly thereafter. The maximum time that you can specify is 12 hours. The value must be in ISO8601 duration format, in the form: PT#H#M#S, where each # is the number of hours, minutes, and seconds, respectively. For best results, specify a period of time that gives your instances plenty of time to get up and running. A shorter timeout can cause a rollback.",No,String,PT5M,sample-template.json
BastionHost,AWS::EC2::Instance,,AutoScalingCreationPolicy,,"For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed.",,,,sample-template.json
BastionHost,AWS::EC2::Instance,,AutoScalingCreationPolicy.MinSuccessfulInstancesPercent,,"Specifies the percentage of instances in an Auto Scaling replacement update that must signal success for the update to succeed. You can specify a value from 0 to 100. CloudFormation rounds to the nearest tenth of a percent. For example, if you update five instances with a minimum successful percentage of 50, three instances must signal success. If an instance doesn't send a signal within the time specified by the Timeout property, CloudFormation assumes that the instance wasn't created.",No,Integer,100,sample-template.json
BastionHost,AWS::EC2::Instance,,ResourceSignal,,"When CloudFormation creates the associated resource, configures the number of required success signals and the length of time that CloudFormation waits for those signals.",,,,sample-template.json
BastionHost,AWS::EC2::Instance,,ResourceSignal.Count,,"The number of success signals CloudFormation must receive before it sets the resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't receive the specified number of signals before the timeout period expires, the resource creation fails and CloudFormation rolls the stack back.",No,Integer,1,sample-template.json
BastionHost,AWS::EC2::Instance,,ResourceSignal.Timeout,,"The length of time that CloudFormation waits for the number of signals that was specified in the Count property. The timeout period starts after CloudFormation starts creating the resource, and the timeout expires no sooner than the time you specify but can occur shortly thereafter. The maximum time that you can specify is 12 hours. The value must be in ISO8601 duration format, in the form: PT#H#M#S, where each # is the number of hours, minutes, and seconds, respectively. For best results, specify a period of time that gives your instances plenty of time to get up and running. A shorter timeout can cause a rollback.",No,String,PT5M,sample-template.json
