ResourceId,ResourceType,ResourceNote,Property,Selected,Description,Filename
VPC,AWS::EC2::VPC,VPCリソースに対するコメント.,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
VPC,AWS::EC2::VPC,VPCリソースに対するコメント.,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicSubnet,AWS::EC2::Subnet,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicSubnet,AWS::EC2::Subnet,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InternetGateway,AWS::EC2::InternetGateway,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InternetGateway,AWS::EC2::InternetGateway,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
GatewayToInternet,AWS::EC2::VPCGatewayAttachment,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
GatewayToInternet,AWS::EC2::VPCGatewayAttachment,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicRouteTable,AWS::EC2::RouteTable,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicRouteTable,AWS::EC2::RouteTable,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicRoute,AWS::EC2::Route,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicRoute,AWS::EC2::Route,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicSubnetRouteTableAssociation,AWS::EC2::SubnetRouteTableAssociation,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicSubnetRouteTableAssociation,AWS::EC2::SubnetRouteTableAssociation,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicNetworkAcl,AWS::EC2::NetworkAcl,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicNetworkAcl,AWS::EC2::NetworkAcl,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InboundHTTPPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InboundHTTPPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InboundHTTPSPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InboundHTTPSPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InboundSSHPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InboundSSHPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InboundEphemeralPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InboundEphemeralPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
OutboundPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
OutboundPublicNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PublicSubnetNetworkAclAssociation,AWS::EC2::SubnetNetworkAclAssociation,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PublicSubnetNetworkAclAssociation,AWS::EC2::SubnetNetworkAclAssociation,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateSubnet,AWS::EC2::Subnet,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateSubnet,AWS::EC2::Subnet,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateRouteTable,AWS::EC2::RouteTable,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateRouteTable,AWS::EC2::RouteTable,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateSubnetRouteTableAssociation,AWS::EC2::SubnetRouteTableAssociation,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateSubnetRouteTableAssociation,AWS::EC2::SubnetRouteTableAssociation,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateRoute,AWS::EC2::Route,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateRoute,AWS::EC2::Route,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateNetworkAcl,AWS::EC2::NetworkAcl,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateNetworkAcl,AWS::EC2::NetworkAcl,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
InboundPrivateNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
InboundPrivateNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
OutBoundPrivateNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
OutBoundPrivateNetworkAclEntry,AWS::EC2::NetworkAclEntry,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
PrivateSubnetNetworkAclAssociation,AWS::EC2::SubnetNetworkAclAssociation,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
PrivateSubnetNetworkAclAssociation,AWS::EC2::SubnetNetworkAclAssociation,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
NATIPAddress,AWS::EC2::EIP,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
NATIPAddress,AWS::EC2::EIP,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
NATDevice,AWS::EC2::Instance,This is a ec2 instance,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
NATSecurityGroup,AWS::EC2::SecurityGroup,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
NATSecurityGroup,AWS::EC2::SecurityGroup,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
BastionIPAddress,AWS::EC2::EIP,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
BastionIPAddress,AWS::EC2::EIP,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
BastionHost,AWS::EC2::Instance,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
BastionHost,AWS::EC2::Instance,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
BastionSecurityGroup,AWS::EC2::SecurityGroup,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
BastionSecurityGroup,AWS::EC2::SecurityGroup,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
BeanstalkSecurityGroup,AWS::EC2::SecurityGroup,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
BeanstalkSecurityGroup,AWS::EC2::SecurityGroup,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
WebServerRole,AWS::IAM::Role,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
WebServerRole,AWS::IAM::Role,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
WebServerRolePolicy,AWS::IAM::Policy,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
WebServerRolePolicy,AWS::IAM::Policy,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
WebServerInstanceProfile,AWS::IAM::InstanceProfile,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
WebServerInstanceProfile,AWS::IAM::InstanceProfile,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
SampleApplication,AWS::ElasticBeanstalk::Application,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
SampleApplication,AWS::ElasticBeanstalk::Application,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
SampleApplicationVersion,AWS::ElasticBeanstalk::ApplicationVersion,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
SampleApplicationVersion,AWS::ElasticBeanstalk::ApplicationVersion,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
SampleEnvironment,AWS::ElasticBeanstalk::Environment,,Delete,True,"CloudFormation deletes the resource and all its content if applicable during stack deletion. You can add this deletion policy to any resource type. By default, if you don't specify a DeletionPolicy, CloudFormation deletes your resources. However, be aware of the following considerations: For AWS::RDS::DBCluster resources, the default policy is Snapshot. For AWS::RDS::DBInstance resources that don't specify the DBClusterIdentifier property, the default policy is Snapshot. For Amazon S3 buckets, you must delete all objects in the bucket for deletion to succeed.",sample-template.json
SampleEnvironment,AWS::ElasticBeanstalk::Environment,,Retain,False,"CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type. When CloudFormation completes the stack deletion, the stack will be in Delete_Complete state; however, resources that are retained continue to exist and continue to incur applicable charges until you delete those resources. For update operations, the following considerations apply: If a resource is deleted, the DeletionPolicy retains the physical resource but ensures that it's deleted from CloudFormation's scope. If a resource is updated such that a new physical resource is created to replace the old resource, then the old resource is completely deleted, including from CloudFormation's scope.",sample-template.json
